{"version":3,"sources":["reducers/BookmarkReducer.js","contexts/BookmarkContext.js","components/Header.js","components/NewBookmark.js","components/Bookmark.js","components/BookmarksList.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["BookmarkReducer","state","action","type","title","bookmark","url","id","uuid","filter","BookmarkContext","createContext","BookmarkContextProvider","children","useReducer","localData","localStorage","getItem","JSON","parse","bookmarks","dispatch","useEffect","setItem","stringify","Provider","value","Header","useContext","className","length","NewBookmark","useState","siteName","setSiteName","siteUrl","setSiteUrl","siteNameRef","useRef","siteUrlRef","onSubmit","e","preventDefault","test","current","classList","contains","remove","focus","setTimeout","add","htmlFor","onChange","target","required","placeholder","ref","Bookmark","iconTitle","split","toLowerCase","icon","href","rel","onClick","BookmarksList","map","key","style","marginTop","textAlign","backgroundColor","padding","Footer","App","Boolean","window","location","hostname","match","library","fab","faTrash","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e29e68cc.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\r\n\r\nexport const BookmarkReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_BOOKMARK':\r\n      return [...state, { title: action.bookmark.title, url: action.bookmark.url, id: uuid() }];\r\n    case 'REMOVE_BOOKMARK':\r\n      return state.filter(bookmark => bookmark.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { BookmarkReducer } from '../reducers/BookmarkReducer';\r\n\r\nexport const BookmarkContext = createContext();\r\n\r\nconst BookmarkContextProvider = ({ children }) => {\r\n  const [bookmarks, dispatch] = useReducer(BookmarkReducer, [], () => {\r\n    const localData = localStorage.getItem('bookmarks');\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\r\n  }, [bookmarks]);\r\n\r\n  return (\r\n    <BookmarkContext.Provider value={{ bookmarks, dispatch }}>{children}</BookmarkContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BookmarkContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { BookmarkContext } from '../contexts/BookmarkContext';\r\n\r\nconst Header = () => {\r\n  const { bookmarks } = useContext(BookmarkContext);\r\n  return (\r\n    <header>\r\n      <h1 className='logo'>Bookmarker App</h1>\r\n      <p className='header-info'>You have {bookmarks.length} bookmark(s).</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useRef } from 'react';\r\nimport { BookmarkContext } from '../contexts/BookmarkContext';\r\n\r\nconst NewBookmark = () => {\r\n  const { dispatch } = useContext(BookmarkContext);\r\n  const [siteName, setSiteName] = useState('');\r\n  const [siteUrl, setSiteUrl] = useState('');\r\n\r\n  const siteNameRef = useRef();\r\n  const siteUrlRef = useRef();\r\n\r\n  const domainValidator = domain => {\r\n    const regex = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+$/;\r\n    if (regex.test(domain)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (domainValidator(siteUrl)) {\r\n      dispatch({ type: 'ADD_BOOKMARK', bookmark: { title: siteName, url: siteUrl } });\r\n      setSiteUrl('');\r\n      setSiteName('');\r\n      if (siteUrlRef.current.classList.contains('invalid')) {\r\n        siteUrlRef.current.classList.remove('invalid');\r\n      }\r\n      siteNameRef.current.focus();\r\n    } else {\r\n      if (siteUrlRef.current.classList.contains('invalid')) {\r\n        siteUrlRef.current.classList.remove('invalid');\r\n        setTimeout(() => {\r\n          siteUrlRef.current.classList.add('invalid');\r\n        }, 100);\r\n      } else {\r\n        siteUrlRef.current.classList.add('invalid');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='form' onSubmit={handleSubmit}>\r\n      <div className='form-control'>\r\n        <label htmlFor='title'>Site name:</label>\r\n        <input\r\n          value={siteName}\r\n          onChange={e => setSiteName(e.target.value)}\r\n          type='text'\r\n          required\r\n          placeholder='e.g Google'\r\n          id='title'\r\n          className='Title'\r\n          ref={siteNameRef}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor='url'>Site url:</label>\r\n        <input\r\n          value={siteUrl}\r\n          onChange={e => setSiteUrl(e.target.value)}\r\n          type='text'\r\n          required\r\n          placeholder='e.g google.com'\r\n          id='url'\r\n          className='Url'\r\n          ref={siteUrlRef}\r\n        />\r\n        <span className='error'>Invalid url</span>\r\n      </div>\r\n      <input className='submit-btn' type='submit' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewBookmark;\r\n","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { BookmarkContext } from '../contexts/BookmarkContext';\r\n\r\nconst Bookmark = ({ bookmark }) => {\r\n  const { dispatch } = useContext(BookmarkContext);\r\n  const { url } = bookmark;\r\n  const iconTitle = url.split('.')[0].toLowerCase();\r\n\r\n  const handleDelete = e => {\r\n    dispatch({ type: 'REMOVE_BOOKMARK', id: bookmark.id });\r\n  };\r\n\r\n  return (\r\n    <div className='bookmark'>\r\n      <div className='bookmark-logo'>\r\n        <span>{bookmark.title}</span>\r\n        <FontAwesomeIcon className='brand' icon={['fab', iconTitle]} />\r\n      </div>\r\n      <div className='bookmark-action'>\r\n        <a href={'https://' + url} target='_blank' rel='noopener noreferrer'>\r\n          Visit\r\n        </a>\r\n        <button className='delete-btn' onClick={handleDelete}>\r\n          Delete\r\n          <FontAwesomeIcon className='trash' icon='trash' />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import React, { useContext } from 'react';\r\nimport { BookmarkContext } from '../contexts/BookmarkContext';\r\nimport Bookmark from '../components/Bookmark';\r\n\r\nconst BookmarksList = () => {\r\n  const { bookmarks } = useContext(BookmarkContext);\r\n  return bookmarks.length ? (\r\n    <div className='bookmarks-list'>\r\n      {bookmarks.map(bookmark => (\r\n        <Bookmark bookmark={bookmark} key={bookmark.id} />\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <p style={{ marginTop: '1rem', textAlign: 'center', backgroundColor: '#fff', padding: '1rem' }}>\r\n      No bookmarks\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default BookmarksList;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <a href='https://github.com/Khotam/' target='_blank' rel='noopener noreferrer'>\r\n        <span>Github:</span>\r\n        <FontAwesomeIcon icon={['fab', 'github']} />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport BookmarkContextProvider from './contexts/BookmarkContext';\nimport Header from './components/Header';\nimport NewBookmark from './components/NewBookmark';\nimport BookmarksList from './components/BookmarksList';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BookmarkContextProvider>\n        <Header />\n        <NewBookmark />\n        <BookmarksList />\n      </BookmarkContextProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fab, faTrash);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}